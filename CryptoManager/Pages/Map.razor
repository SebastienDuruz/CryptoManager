@page "/map"
@using CryptoManager.Data
@using CryptoManager.Models

@inject CoinGeckoFetcher CoinGeckoFetcher
@inject IJSRuntime JSRuntime
@inject NavigationManager NavManager

<PageTitle>Crypto Map</PageTitle>

<h2>Crypto Currencies by Market Cap</h2>

@if(CoinGeckoFetcher.Coins == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="d-flex w-100">
        <input class="w-100 m-2 form-control" @bind="Filter" @bind:event="oninput" placeholder="Search..."></input>
    </div>
    <div class="d-flex w-100">
        <table class="table table-sm table-hover m-2">
            <thead>
                <tr>
                    <th>Coin</th>
                    <th>Symbol</th>
                    <th>Price</th>
                    <th>24h changes</th>
                    <th>24h Volume</th>
                    <th>Mkt Cap</th>
                </tr>
            </thead>
            <tbody>
                @foreach (CoinGeckoMarket coin in CoinGeckoFetcher.Coins)
                {
                    if(coin.name.ToLower().Contains(Filter.ToLower()) || coin.symbol.ToLower().Contains(Filter.ToLower()) || coin.id.ToLower().Contains(Filter.ToLower()))
                    {
                        <tr class="table-active" role="button" @onclick="@(async () => await LoadCoinPage(coin.id))">
                            <th class="align-middle" scope="row">
                                <img rel="icon" src="@coin.image" width="30" height="30">
                                <span class="fw-bold p-1 pe-auto"> @coin.name</span>
                            </th>
                            <td class="align-middle">
                                <span>@coin.symbol.ToUpper()</span>
                            </td>
                            <td class="align-middle">@(coin.current_price.ToString("0.00")) $</td>
                            <td class="align-middle @(coin.price_change_percentage_24h < 0 ? "text-danger" : "text-success")">@(String.Format("{0:0.##}", coin.price_change_percentage_24h)) %</td>
                            <td class="align-middle">@(coin.total_volume.ToString("0.00")) $</td>
                            <td class="align-middle">@(coin.market_cap.ToString("0.00")) $</td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>
}

@code{

    private string Filter { get; set; }

    protected override async Task OnInitializedAsync()
    {
        this.Filter = "";
        CoinGeckoFetcher.Coins = CoinGeckoFetcher.GetCoins();
    }

    private async Task LoadCoinPage(string coinId)
    {
        NavManager.NavigateTo($"/coin/{coinId}");
    }
}